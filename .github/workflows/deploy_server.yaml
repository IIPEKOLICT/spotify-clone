name: 'Deploy server'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'server/**'

env:
  VERCEL_BACKEND_APP_NAME: 'spotify-server'
  VERCEL_TOKEN: '${{ secrets.VERCEL_TOKEN }}'
  VERCEL_BACKEND_ORGANIZATION_ID: '${{ secrets.VERCEL_BACKEND_ORGANIZATION_ID }}'
  VERCEL_BACKEND_PROJECT_ID: '${{ secrets.VERCEL_BACKEND_PROJECT_ID }}'

  FRONTEND_URL: 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}'
  DATABASE_URL: '${{ secrets.DATABASE_URL }}'
  GOOGLE_PROJECT_ID: '${{ secrets.GOOGLE_PROJECT_ID }}'
  GOOGLE_PRIVATE_KEY: '${{ secrets.GOOGLE_PRIVATE_KEY }}'
  GOOGLE_CLIENT_EMAIL: '${{ secrets.GOOGLE_CLIENT_EMAIL }}'
  GOOGLE_BUCKET_NAME: '${{ secrets.GOOGLE_BUCKET_NAME }}'
  JWT_SECRET: '${{ secrets.JWT_SECRET }}'
  BCRYPT_SALT: '${{ secrets.BCRYPT_SALT }}'
  SOCKET_SERVER_URL: '${{ secrets.SOCKET_SERVER_URL }}'

jobs:
  Deploy:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: 18
      - name: 'Setup environment'
        run: 'chmod +x scripts/setup_environment_for_vercel.sh && scripts/setup_environment_for_vercel.sh'
      - name: 'Set environment variables'
        uses: 'dkershner6/vercel-set-env-action@v1'
        with:
          token: '${{ env.VERCEL_TOKEN }}'
          projectName: '${{ env.VERCEL_BACKEND_APP_NAME }}'
          envVariableKeys: '${{ env.BACKEND_ENV_VARIABLES }}'
      - name: 'Install dependencies'
        run: 'cd server && npm i'
      - name: 'Build'
        run: 'cd server && npm run build'
      - name: 'Deploy'
        uses: 'amondnet/vercel-action@v20'
        with:
          vercel-token: '${{ env.VERCEL_TOKEN }}'
          vercel-args: '--prod --yes'
          vercel-org-id: '${{ env.VERCEL_BACKEND_ORGANIZATION_ID }}'
          vercel-project-id: '${{ env.VERCEL_BACKEND_PROJECT_ID }}'
          working-directory: './server'
      - name: 'Get deploy URL'
        id: 'backend-state'
        uses: 'justincase-jp/vercel-preview-url-alias@0.2.1'
        with:
          vercel_access_token: '${{ env.VERCEL_TOKEN }}'
          vercel_project_id: '${{ env.VERCEL_BACKEND_PROJECT_ID }}'
      - name: 'Check build status'
        run: '[[ ${{ steps.backend-state.outputs.status }} == "READY" ]] && echo Success build! || exit 1'
